/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CreateItemInput: { // input type
    amount: number; // Int!
    category: NexusGenEnums['category']; // category!
    description: string; // String!
    discountPercent: number; // Int!
    image1: string; // String!
    image2: string; // String!
    itemName: string; // String!
    newPrice: number; // Int!
  }
  CreateOrderInput: { // input type
    token: string; // String!
  }
  ItemWhereUniqueInput: { // input type
    itemId: string; // ID!
  }
  ItemsInput: { // input type
    category?: NexusGenEnums['category'] | null; // category
    discountPercent_gt?: number | null; // Int
  }
  MoveItemToCartInput: { // input type
    itemId: string; // ID!
    wishlistItemId: string; // ID!
  }
  SearchTermInput: { // input type
    searchTerm: string; // String!
  }
  SigninInput: { // input type
    email: string; // String!
    password: string; // String!
  }
  SignupInput: { // input type
    email: string; // String!
    password: string; // String!
    username: string; // String!
  }
  UpdateItemInput: { // input type
    amount?: number | null; // Int
    category?: NexusGenEnums['category'] | null; // category
    description?: string | null; // String
    discountPercent?: number | null; // Int
    image1?: string | null; // String
    image2?: string | null; // String
    itemName?: string | null; // String
    newPrice?: number | null; // Int
  }
  UserWhereUniqueInput: { // input type
    id: string; // ID!
  }
  addItemToWishlistInput: { // input type
    itemId: string; // ID!
  }
}

export interface NexusGenEnums {
  category: "BAG" | "DEVICE" | "SHIRT" | "SHOE" | "WRISTWATCH"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  AuthPayload: { // root type
    accessToken: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  CartItem: { // root type
    id: string; // ID!
    itemId: string; // ID!
    quantity: number; // Int!
    userId: string; // ID!
  }
  Item: { // root type
    amount: number; // Int!
    category: NexusGenEnums['category']; // category!
    description: string; // String!
    discountPercent: string; // String!
    id: string; // ID!
    image1: string; // String!
    image2?: string | null; // String
    itemName: string; // String!
    newPrice: number; // Int!
  }
  Mutation: {};
  Order: { // root type
    charge: string; // String!
    id: string; // ID!
    total: number; // Int!
    userId: string; // ID!
  }
  OrderItem: { // root type
    description: string; // String!
    id: string; // ID!
    image1: string; // String!
    image2: string; // String!
    itemName: string; // String!
    newPrice: number; // Int!
    orderId: string; // ID!
    quantity: number; // Int!
    userId: string; // ID!
  }
  Query: {};
  User: { // root type
    email: string; // String!
    id: string; // ID!
    username: string; // String!
  }
  WishlistItem: { // root type
    id: string; // ID!
    itemId: string; // ID!
    userId: string; // ID!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    accessToken: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  CartItem: { // field return type
    id: string; // ID!
    item: NexusGenRootTypes['Item']; // Item!
    itemId: string; // ID!
    quantity: number; // Int!
    user: NexusGenRootTypes['User']; // User!
    userId: string; // ID!
  }
  Item: { // field return type
    amount: number; // Int!
    cartItems: NexusGenRootTypes['CartItem'][]; // [CartItem!]!
    category: NexusGenEnums['category']; // category!
    description: string; // String!
    discountPercent: string; // String!
    id: string; // ID!
    image1: string; // String!
    image2: string | null; // String
    itemName: string; // String!
    newPrice: number; // Int!
    wishlistItems: NexusGenRootTypes['WishlistItem'][]; // [WishlistItem!]!
  }
  Mutation: { // field return type
    addItemToCart: NexusGenRootTypes['CartItem']; // CartItem!
    addItemToWishlist: NexusGenRootTypes['WishlistItem']; // WishlistItem!
    createItem: NexusGenRootTypes['Item']; // Item!
    createOrder: NexusGenRootTypes['Order']; // Order!
    decreaseCartItemQuantity: NexusGenRootTypes['CartItem']; // CartItem!
    deleteItem: NexusGenRootTypes['Item']; // Item!
    increaseCartItemQuantity: NexusGenRootTypes['CartItem']; // CartItem!
    moveWishlistItemToCart: NexusGenRootTypes['CartItem']; // CartItem!
    refreshAuth: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    removeCartItem: NexusGenRootTypes['CartItem']; // CartItem!
    signin: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    signout: NexusGenRootTypes['User']; // User!
    signup: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    updateItem: NexusGenRootTypes['Item'] | null; // Item
  }
  Order: { // field return type
    charge: string; // String!
    id: string; // ID!
    orderItems: NexusGenRootTypes['OrderItem'][]; // [OrderItem!]!
    total: number; // Int!
    user: NexusGenRootTypes['User']; // User!
    userId: string; // ID!
  }
  OrderItem: { // field return type
    description: string; // String!
    id: string; // ID!
    image1: string; // String!
    image2: string; // String!
    itemName: string; // String!
    newPrice: number; // Int!
    orderId: string; // ID!
    quantity: number; // Int!
    user: NexusGenRootTypes['User']; // User!
    userId: string; // ID!
  }
  Query: { // field return type
    cartItems: NexusGenRootTypes['CartItem'][]; // [CartItem!]!
    getUser: NexusGenRootTypes['User'] | null; // User
    getUsers: NexusGenRootTypes['User'][]; // [User!]!
    item: NexusGenRootTypes['Item'] | null; // Item
    items: NexusGenRootTypes['Item'][]; // [Item!]!
    me: NexusGenRootTypes['User'] | null; // User
    orders: NexusGenRootTypes['Order'][]; // [Order!]!
    searchItems: NexusGenRootTypes['Item'][]; // [Item!]!
    wishlistItems: NexusGenRootTypes['WishlistItem'][]; // [WishlistItem!]!
  }
  User: { // field return type
    cartItems: NexusGenRootTypes['CartItem'][]; // [CartItem!]!
    email: string; // String!
    id: string; // ID!
    orders: NexusGenRootTypes['Order'][]; // [Order!]!
    username: string; // String!
    wishlistItems: NexusGenRootTypes['WishlistItem'][]; // [WishlistItem!]!
  }
  WishlistItem: { // field return type
    id: string; // ID!
    item: NexusGenRootTypes['Item']; // Item!
    itemId: string; // ID!
    user: NexusGenRootTypes['User']; // User!
    userId: string; // ID!
  }
}

export interface NexusGenFieldTypeNames {
  AuthPayload: { // field return type name
    accessToken: 'String'
    user: 'User'
  }
  CartItem: { // field return type name
    id: 'ID'
    item: 'Item'
    itemId: 'ID'
    quantity: 'Int'
    user: 'User'
    userId: 'ID'
  }
  Item: { // field return type name
    amount: 'Int'
    cartItems: 'CartItem'
    category: 'category'
    description: 'String'
    discountPercent: 'String'
    id: 'ID'
    image1: 'String'
    image2: 'String'
    itemName: 'String'
    newPrice: 'Int'
    wishlistItems: 'WishlistItem'
  }
  Mutation: { // field return type name
    addItemToCart: 'CartItem'
    addItemToWishlist: 'WishlistItem'
    createItem: 'Item'
    createOrder: 'Order'
    decreaseCartItemQuantity: 'CartItem'
    deleteItem: 'Item'
    increaseCartItemQuantity: 'CartItem'
    moveWishlistItemToCart: 'CartItem'
    refreshAuth: 'AuthPayload'
    removeCartItem: 'CartItem'
    signin: 'AuthPayload'
    signout: 'User'
    signup: 'AuthPayload'
    updateItem: 'Item'
  }
  Order: { // field return type name
    charge: 'String'
    id: 'ID'
    orderItems: 'OrderItem'
    total: 'Int'
    user: 'User'
    userId: 'ID'
  }
  OrderItem: { // field return type name
    description: 'String'
    id: 'ID'
    image1: 'String'
    image2: 'String'
    itemName: 'String'
    newPrice: 'Int'
    orderId: 'ID'
    quantity: 'Int'
    user: 'User'
    userId: 'ID'
  }
  Query: { // field return type name
    cartItems: 'CartItem'
    getUser: 'User'
    getUsers: 'User'
    item: 'Item'
    items: 'Item'
    me: 'User'
    orders: 'Order'
    searchItems: 'Item'
    wishlistItems: 'WishlistItem'
  }
  User: { // field return type name
    cartItems: 'CartItem'
    email: 'String'
    id: 'ID'
    orders: 'Order'
    username: 'String'
    wishlistItems: 'WishlistItem'
  }
  WishlistItem: { // field return type name
    id: 'ID'
    item: 'Item'
    itemId: 'ID'
    user: 'User'
    userId: 'ID'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addItemToCart: { // args
      input: NexusGenInputs['ItemWhereUniqueInput']; // ItemWhereUniqueInput!
    }
    addItemToWishlist: { // args
      input: NexusGenInputs['addItemToWishlistInput']; // addItemToWishlistInput!
    }
    createItem: { // args
      input: NexusGenInputs['CreateItemInput']; // CreateItemInput!
    }
    createOrder: { // args
      input: NexusGenInputs['CreateOrderInput']; // CreateOrderInput!
    }
    decreaseCartItemQuantity: { // args
      input: NexusGenInputs['ItemWhereUniqueInput']; // ItemWhereUniqueInput!
    }
    deleteItem: { // args
      where: NexusGenInputs['ItemWhereUniqueInput']; // ItemWhereUniqueInput!
    }
    increaseCartItemQuantity: { // args
      input: NexusGenInputs['ItemWhereUniqueInput']; // ItemWhereUniqueInput!
    }
    moveWishlistItemToCart: { // args
      input: NexusGenInputs['MoveItemToCartInput']; // MoveItemToCartInput!
    }
    removeCartItem: { // args
      input: NexusGenInputs['ItemWhereUniqueInput']; // ItemWhereUniqueInput!
    }
    signin: { // args
      input: NexusGenInputs['SigninInput']; // SigninInput!
    }
    signup: { // args
      input: NexusGenInputs['SignupInput']; // SignupInput!
    }
    updateItem: { // args
      input: NexusGenInputs['UpdateItemInput']; // UpdateItemInput!
      where: NexusGenInputs['ItemWhereUniqueInput']; // ItemWhereUniqueInput!
    }
  }
  Query: {
    getUser: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    item: { // args
      where: NexusGenInputs['ItemWhereUniqueInput']; // ItemWhereUniqueInput!
    }
    items: { // args
      input?: NexusGenInputs['ItemsInput'] | null; // ItemsInput
    }
    searchItems: { // args
      input: NexusGenInputs['SearchTermInput']; // SearchTermInput!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}